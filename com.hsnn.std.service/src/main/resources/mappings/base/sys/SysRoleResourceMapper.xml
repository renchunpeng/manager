<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hsnn.medstgmini.base.sys.dao.SysRoleResourceDao">
	<resultMap type="com.hsnn.medstgmini.base.sys.model.SysRoleResource" id="BaseResultMap">
        <result property="id" column="id" javaType="Integer"/>
        <result property="roleId" column="role_id" javaType="Integer"/>
        <result property="resourceId" column="resource_id" javaType="Integer"/>
        
        <result property="belongOrg" column="belong_org" javaType="String"/>
        <result property="belongDepartmentId" column="belong_department_id" javaType="Integer"/>
        <result property="belongPostId" column="belong_post_id" javaType="Integer"/>
        
        <result property="isUsing" column="is_using" javaType="Integer"/>
        <result property="type" column="type" javaType="Integer"/>
        <result property="addUserId" column="add_user_id" javaType="String"/>
        <result property="addUserName" column="add_user_name" javaType="String"/>
        <result property="addTime" column="add_time" javaType="Date"/>
        <result property="lastUpdateUserId" column="last_update_user_id" javaType="String"/>
        <result property="lastUpdateUserName" column="last_update_user_name" javaType="String"/>
        <result property="lastUpdateTime" column="last_update_time" javaType="Date"/>
	</resultMap>
	
	<sql id="full-columns" >
        t.id,
        t.role_id,
        t.resource_id,
        t.belong_org,
		t.belong_department_id,
		t.belong_post_id,
        t.is_using,
        t.type,
        t.add_user_id,
        t.add_user_name,
        t.add_time,
        t.last_update_user_id,
        t.last_update_user_name,
        t.last_update_time
	</sql>

	
	<select id="load" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		SELECT * from sys_role_resource where id =  #{value}
	</select>
	
	<select id="get" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		SELECT * from sys_role_resource where id =  #{value}
	</select>
	
	<select id="findAll" resultMap="BaseResultMap">
		SELECT * from sys_role_resource 
	</select>
	

	<insert id="persist" parameterType="com.hsnn.medstgmini.base.sys.model.SysRoleResource">
		INSERT INTO sys_role_resource(
	            role_id,
	            resource_id ,
	            belong_org,
				belong_department_id,
				belong_post_id,
	            is_using ,
	            type ,
	            add_user_id ,
	            add_user_name ,
	            add_time ,
	            last_update_user_id ,
	            last_update_user_name ,
	            last_update_time 
	    ) 
		VALUES (
	        	#{roleId},
	        	#{resourceId},
	        	#{belongOrg},
				#{belongDepartmentId},
				#{belongPostId},
	        	#{isUsing},
	        	#{type},
	        	#{addUserId},
	        	#{addUserName},
	        	#{addTime},
	        	#{lastUpdateUserId},
	        	#{lastUpdateUserName},
	        	now()
		)
	</insert>
	
	
	<insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="com.hsnn.medstgmini.base.sys.model.SysRoleResource">
		<!--<selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE">-->
			<!--SELECT SYSROLERESOURCESEQ.nextval from dual-->
        <!--</selectKey>-->
		INSERT INTO sys_role_resource(
	            role_id ,
	            resource_id ,
	            belong_org,
				belong_department_id,
				belong_post_id,
	            is_using ,
	            type ,
	            add_user_id ,
	            add_user_name ,
	            add_time ,
	            last_update_user_id ,
	            last_update_user_name ,
	            last_update_time 
		) 
		VALUES (
	        	#{roleId},
	        	#{resourceId},
	        	#{belongOrg},
				#{belongDepartmentId},
				#{belongPostId},
	        	#{isUsing},
	        	#{type},
	        	#{addUserId},
	        	#{addUserName},
	        	#{addTime},
	        	#{lastUpdateUserId},
	        	#{lastUpdateUserName},
	        	now()
		)
	</insert>

	<update id="update" parameterType="com.hsnn.medstgmini.base.sys.model.SysRoleResource">
		UPDATE sys_role_resource  
		<set>
	        	role_id = #{roleId},
	        	resource_id = #{resourceId},
	        	belong_org = #{belongOrg},
				belong_department_id = #{belongDepartmentId},
				belong_post_id = #{belongPostId},
	        	is_using = #{isUsing},
	        	type = #{type},
	        	add_user_id = #{addUserId},
	        	add_user_name = #{addUserName},
	        	add_time = #{addTime},
	        	last_update_user_id = #{lastUpdateUserId},
	        	last_update_user_name = #{lastUpdateUserName},
	        	last_update_time = #{lastUpdateTime},
        </set>
		WHERE  id =  #{id}
	</update>

    <update id="updateRoleResource" parameterType="com.hsnn.medstgmini.base.sys.model.SysRoleResource">
		UPDATE sys_role_resource  
		<set>
	         <if test="@OGNL@isNotEmpty(roleId)">
	            role_id = #{roleId},
	        </if>
			<if test="@OGNL@isNotEmpty(resourceId)">
	            resource_id = #{resourceId},
	        </if>
	        <if test="@OGNL@isNotEmpty(belongOrg)">
	            belong_org = #{belongOrg},
	        </if>
	        <if test="@OGNL@isNotEmpty(belongDepartmentId)">
	            belong_department_id = #{belongDepartmentId},
	        </if>
	        <if test="@OGNL@isNotEmpty(belongPostId)">
	            belong_post_id = #{belongPostId},
	        </if>
			<if test="@OGNL@isNotEmpty(isUsing)">
	            is_using = #{isUsing},
	        </if>
			<if test="@OGNL@isNotEmpty(type)">
	            type = #{type},
	        </if>
			<if test="@OGNL@isNotEmpty(addUserId)">
	            add_user_id = #{addUserId},
	        </if>
			<if test="@OGNL@isNotEmpty(addUserName)">
	            add_user_name = #{addUserName},
	        </if>
			<if test="@OGNL@isNotEmpty(addTime)">
	            add_time = #{addTime},
	        </if>
			<if test="@OGNL@isNotEmpty(lastUpdateUserId)">
	            last_update_user_id = #{lastUpdateUserId},
	        </if>
			<if test="@OGNL@isNotEmpty(lastUpdateUserName)">
	            last_update_user_name = #{lastUpdateUserName},
	        </if>
	            last_update_time = now()
        </set>
		WHERE  id =  #{id}
	</update>

    <update id="updateRoleResourceByDept" parameterType="com.hsnn.medstgmini.base.sys.model.SysRoleResource">
		UPDATE sys_role_resource  r
		<set>
			<if test="@OGNL@isNotEmpty(isUsing)">
	            is_using = #{isUsing},
	        </if>
			<if test="@OGNL@isNotEmpty(lastUpdateUserId)">
	            last_update_user_id = #{lastUpdateUserId},
	        </if>
			<if test="@OGNL@isNotEmpty(lastUpdateUserName)">
	            last_update_user_name = #{lastUpdateUserName},
	        </if>
	            last_update_time = now()
        </set>
		WHERE     r.belong_department_id = #{belongDepartmentId} and r.resource_id = #{resourceId}
         and r.belong_post_id is not null
	</update>


	<delete id="delete" parameterType="java.lang.Integer">
		DELETE FROM sys_role_resource WHERE  id =  #{value}
	</delete>

	<select id="queryAll" parameterType="map" resultMap="BaseResultMap">
		SELECT <include refid="full-columns" />
	    FROM sys_role_resource t
		<where>
			<if test="@OGNL@isNotEmpty(id)">
	            AND t.id = #{id}
	        </if>
			<if test="@OGNL@isNotEmpty(roleId)">
	            AND t.role_id = #{roleId}
	        </if>
			<if test="@OGNL@isNotEmpty(resourceId)">
	            AND t.resource_id = #{resourceId}
	        </if>
	        <if test="@OGNL@isNotEmpty(belongOrg)">
	            AND t.belong_org = #{belongOrg}
	        </if>
	        <if test="@OGNL@isNotEmpty(belongDepartmentId)">
	            AND t.belong_department_id = #{belongDepartmentId}
	        </if>
	        <if test="@OGNL@isNotEmpty(belongPostId)">
	            AND t.belong_post_id = #{belongPostId}
	        </if>
			<if test="@OGNL@isNotEmpty(isUsing)">
	            AND t.is_using = #{isUsing}
	        </if>
			<if test="@OGNL@isNotEmpty(type)">
	            AND t.type = #{type}
	        </if>
			<if test="@OGNL@isNotEmpty(addUserId)">
	            AND t.add_user_id = #{addUserId}
	        </if>
			<if test="@OGNL@isNotEmpty(addUserName)">
	            AND t.add_user_name = #{addUserName}
	        </if>
			<if test="@OGNL@isNotEmpty(addTime)">
	            AND t.add_time = #{addTime}
	        </if>
			<if test="@OGNL@isNotEmpty(lastUpdateUserId)">
	            AND t.last_update_user_id = #{lastUpdateUserId}
	        </if>
			<if test="@OGNL@isNotEmpty(lastUpdateUserName)">
	            AND t.last_update_user_name = #{lastUpdateUserName}
	        </if>
			<if test="@OGNL@isNotEmpty(lastUpdateTime)">
	            AND t.last_update_time = #{lastUpdateTime}
	        </if>
		</where>
	</select>
	
	<insert id="insertBatch" parameterType="java.util.List" >
        INSERT INTO sys_role_resource (
        	id,
            role_id ,
            resource_id ,
            belong_org,
			belong_department_id,
			belong_post_id,
            is_using ,
            type ,
            add_user_id ,
            add_user_name ,
            add_time ,
            last_update_user_id ,
            last_update_user_name ,
            last_update_time 
        ) select SYSROLERESOURCESEQ.nextval,p.* from(
        <foreach collection="list" item="item" index="index" separator="union all">
        select 
        	#{item.roleId},
        	#{item.resourceId},
        	#{item.belongOrg},
			#{item.belongDepartmentId},
			#{item.belongPostId},
        	#{item.isUsing},
        	#{item.type},
        	#{item.addUserId},
        	#{item.addUserName},
        	now(),
        	#{item.lastUpdateUserId},
        	#{item.lastUpdateUserName},
        	#{item.lastUpdateTime} 
        from dual
        </foreach> ) p
	</insert>
	
	<update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator="">
          UPDATE sys_role_resource  
			<set>
			   <if test="@OGNL@isNotEmpty(item.isUsing)">
		            is_using = #{item.isUsing},
		        </if>
				<if test="@OGNL@isNotEmpty(item.lastUpdateUserId)">
		            last_update_user_id = #{item.lastUpdateUserId},
		        </if>
				<if test="@OGNL@isNotEmpty(item.lastUpdateUserName)">
		            last_update_user_name = #{item.lastUpdateUserName},
		        </if>
		            last_update_time = now()
	        </set>
            where id =  #{item.id};
         </foreach>
	</update>
	
	<update id="updateByParams">
          UPDATE sys_role_resource  
			<set>
				<if test="@OGNL@isNotEmpty(model.isUsing)">
		            is_using = #{model.isUsing},
		        </if>
		        <if test="@OGNL@isNotEmpty(model.lastUpdateUserId)">
		            last_update_user_id = #{model.lastUpdateUserId},
		        </if>
		        <if test="@OGNL@isNotEmpty(model.lastUpdateUserName)">
		            last_update_user_name = #{model.lastUpdateUserName},
		        </if>
		        	last_update_time = now(),
	        </set>
            <where>
		        <if test="@OGNL@isNotEmpty(param.belongOrg)">
		            AND belong_org = #{param.belongOrg}
		        </if>
		        <if test="@OGNL@isNotEmpty(param.belongDepartmentId)">
		            AND belong_department_id = #{param.belongDepartmentId}
		        </if>
		        <if test="@OGNL@isNotEmpty(param.belongPostId)">
		            AND belong_post_id = #{param.belongPostId}
		        </if>
		        
		        <if test="@OGNL@isNotEmpty(param.belongPostIds)">
		            AND belong_post_id in 
		            <foreach collection="param.belongPostIds" item="item" separator="," open="(" close=")">
		            	 #{item}
		            </foreach>
		        </if>
		</where>
	</update>
	
	<select id="getResource" parameterType="Integer" resultMap="BaseResultMap">
		SELECT <include refid="full-columns" />
	    FROM sys_role_resource t where t.role_id = #{userType}
	</select>
	
	<select id="getRolePrivilegeList" resultType="java.lang.String">
		<!-- SELECT resource_id from sys_role_resource WHERE role_id = #{roleId} -->
		select resource_id from sys_role_resource 
			where role_id=#{userType} 
				and belong_department_id is null 
					and belong_post_id is null
	</select>

	<insert id="saveRoleResource" useGeneratedKeys="true" keyProperty="id" parameterType="com.hsnn.medstgmini.base.sys.model.SysRoleResource">
		INSERT INTO sys_role_resource(
		role_id,
		resource_id ,
		is_using ,
		type ,
		add_time
		)
		VALUES (
		#{roleId},
		#{resourceId},
		#{isUsing},
		#{type},
		#{addTime}
		)

	</insert>

	<insert id="addPrivilege" useGeneratedKeys="true" keyProperty="id" parameterType="com.hsnn.medstgmini.base.sys.model.SysRoleResource">
		<!--<selectKey resultType="Integer"  keyProperty="id" order="BEFORE">-->
			<!--select SYSROLERESOURCESEQ.nextval as id from dual-->
		<!--</selectKey>-->
		INSERT INTO sys_role_resource(
	            role_id ,
	            resource_id ,
	            belong_org,
				belong_department_id,
				belong_post_id,
	            is_using ,
	            type ,
	            add_user_id ,
	            add_user_name ,
	            add_time ,
	            last_update_user_id ,
	            last_update_user_name ,
	            last_update_time 
		) 
		VALUES (
				#{roleId},
	        	#{resourceId},
	        	#{belongOrg},
				#{belongDepartmentId},
				#{belongPostId},
	        	1,
	        	#{type},
	        	#{addUserId},
	        	#{addUserName},
	        	now(),
	        	#{lastUpdateUserId},
	        	#{lastUpdateUserName},
	        	now()
		)
	</insert>
</mapper>
