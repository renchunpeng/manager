<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hsnn.medstgmini.base.std.dao.StdOaDispatchDao">
	<resultMap type="com.hsnn.medstgmini.base.std.model.StdOaDispatch" id="BaseResultMap">
        <result property="id" column="id" javaType="String"/>
        <result property="dispatchType" column="dispatch_type" javaType="Integer"/>
        <result property="secretLevel" column="secret_level" javaType="Integer"/>
        <result property="urgencyLevel" column="urgency_level" javaType="Integer"/>
        <result property="dispatchTemplate" column="dispatch_template" javaType="Integer"/>
        <result property="content" column="content" javaType="String"/>
        <result property="auditRemark" column="audit_remark" javaType="String"/>
        <result property="dispatchStatus" column="dispatch_status" javaType="Integer"/>
        <result property="dispatchOffice" column="dispatch_office" javaType="String"/>
        <result property="title" column="title" javaType="String"/>
        <result property="zsOffice" column="zs_office" javaType="String"/>
        <result property="csOffice" column="cs_office" javaType="String"/>
        <result property="dispatchNumber" column="dispatch_number" javaType="Integer"/>
        <result property="addUserId" column="add_user_id" javaType="String"/>
        <result property="addUserName" column="add_user_name" javaType="String"/>
        <result property="addTime" column="add_time" javaType="Date"/>
        <result property="lastUpdateUserId" column="last_update_user_id" javaType="String"/>
        <result property="lastUpdateUserName" column="last_update_user_name" javaType="String"/>
        <result property="lastUpdateTime" column="last_update_time" javaType="Date"/>
	</resultMap>
	
	<sql id="full-columns" >
        t.id,
        t.dispatch_type,
        t.secret_level,
        t.urgency_level,
        t.dispatch_template,
        t.content,
        t.audit_remark,
        t.dispatch_status,
        t.dispatch_office,
        t.title,
        t.zs_office,
        t.cs_office,
        t.dispatch_number,
        t.add_user_id,
        t.add_user_name,
        t.add_time,
        t.last_update_user_id,
        t.last_update_user_name,
        t.last_update_time
	</sql>
		
	<select id="get" parameterType="java.lang.String" resultMap="BaseResultMap">
		SELECT <include refid="full-columns" />  
		FROM std_oa_dispatch t
		WHERE t.id =  #{value}
	</select>

	<insert id="save" parameterType="com.hsnn.medstgmini.base.std.model.StdOaDispatch">
		INSERT INTO std_oa_dispatch(
				id,
	            dispatch_type ,
	            secret_level ,
	            urgency_level ,
	            dispatch_template ,
	            content ,
	            audit_remark ,
	            dispatch_status ,
	            dispatch_office ,
	            title ,
	            zs_office ,
	            cs_office ,
	            dispatch_number ,
	            add_user_id ,
	            add_user_name ,
	            add_time ,
	            last_update_user_id ,
	            last_update_user_name ,
	            last_update_time 
		)
		VALUES (
				#{id},
	        	#{dispatchType},
	        	#{secretLevel},
	        	#{urgencyLevel},
	        	#{dispatchTemplate},
	        	#{content},
	        	#{auditRemark},
	        	#{dispatchStatus},
	        	#{dispatchOffice},
	        	#{title},
	        	#{zsOffice},
	        	#{csOffice},
	        	#{dispatchNumber},
	        	#{addUserId},
	        	#{addUserName},
	        	SYSDATE,
	        	#{lastUpdateUserId},
	        	#{lastUpdateUserName},
	        	SYSDATE
		)
	</insert>

	<update id="update" parameterType="com.hsnn.medstgmini.base.std.model.StdOaDispatch">
		UPDATE std_oa_dispatch  
		<set>
			dispatch_type = #{dispatchType},
			secret_level = #{secretLevel},
			urgency_level = #{urgencyLevel},
			dispatch_template = #{dispatchTemplate},
			content = #{content},
			audit_remark = #{auditRemark},
			dispatch_status = #{dispatchStatus},
			dispatch_office = #{dispatchOffice},
			title = #{title},
			zs_office = #{zsOffice},
			cs_office = #{csOffice},
			dispatch_number = #{dispatchNumber},
			last_update_user_id = #{lastUpdateUserId},
			last_update_user_name = #{lastUpdateUserName},
			last_update_time = SYSDATE,
        </set>
		WHERE  id =  #{id}
	</update>
	
	<update id="updateBySelective" parameterType="com.hsnn.medstgmini.base.std.model.StdOaDispatch">
		UPDATE std_oa_dispatch  
		<set>
	    	<if test="@OGNL@isNotEmpty(dispatchType)">
				dispatch_type = #{dispatchType},
			</if>
	    	<if test="@OGNL@isNotEmpty(secretLevel)">
				secret_level = #{secretLevel},
			</if>
	    	<if test="@OGNL@isNotEmpty(urgencyLevel)">
				urgency_level = #{urgencyLevel},
			</if>
	    	<if test="@OGNL@isNotEmpty(dispatchTemplate)">
				dispatch_template = #{dispatchTemplate},
			</if>
	    	<if test="@OGNL@isNotEmpty(content)">
				content = #{content},
			</if>
	    	<if test="@OGNL@isNotEmpty(auditRemark)">
				audit_remark = #{auditRemark},
			</if>
	    	<if test="@OGNL@isNotEmpty(dispatchStatus)">
				dispatch_status = #{dispatchStatus},
			</if>
	    	<if test="@OGNL@isNotEmpty(dispatchOffice)">
				dispatch_office = #{dispatchOffice},
			</if>
	    	<if test="@OGNL@isNotEmpty(title)">
				title = #{title},
			</if>
	    	<if test="@OGNL@isNotEmpty(zsOffice)">
				zs_office = #{zsOffice},
			</if>
	    	<if test="@OGNL@isNotEmpty(csOffice)">
				cs_office = #{csOffice},
			</if>
	    	<if test="@OGNL@isNotEmpty(dispatchNumber)">
				dispatch_number = #{dispatchNumber},
			</if>
	    	<if test="@OGNL@isNotEmpty(addUserId)">
				add_user_id = #{addUserId},
			</if>
	    	<if test="@OGNL@isNotEmpty(addUserName)">
				add_user_name = #{addUserName},
			</if>
	    	<if test="@OGNL@isNotEmpty(addTime)">
				add_time = #{addTime},
			</if>
	    	<if test="@OGNL@isNotEmpty(lastUpdateUserId)">
				last_update_user_id = #{lastUpdateUserId},
			</if>
	    	<if test="@OGNL@isNotEmpty(lastUpdateUserName)">
				last_update_user_name = #{lastUpdateUserName},
			</if>
	    	<if test="@OGNL@isNotEmpty(lastUpdateTime)">
				last_update_time = #{lastUpdateTime},
			</if>
        </set>
		WHERE  id =  #{id}
	</update>
	
	<delete id="delete" parameterType="java.lang.String">
		DELETE FROM std_oa_dispatch WHERE  id =  #{value}
	</delete>

	<select id="queryAll" parameterType="map" resultMap="BaseResultMap">
		SELECT <include refid="full-columns" />
	    FROM std_oa_dispatch t
		<where>
			<if test="@OGNL@isNotEmpty(id)">
				AND t.id = #{id}
		    </if>
			<if test="@OGNL@isNotEmpty(dispatchType)">
				AND t.dispatch_type = #{dispatchType}
		    </if>
			<if test="@OGNL@isNotEmpty(secretLevel)">
				AND t.secret_level = #{secretLevel}
		    </if>
			<if test="@OGNL@isNotEmpty(urgencyLevel)">
				AND t.urgency_level = #{urgencyLevel}
		    </if>
			<if test="@OGNL@isNotEmpty(dispatchTemplate)">
				AND t.dispatch_template = #{dispatchTemplate}
		    </if>
			<if test="@OGNL@isNotEmpty(content)">
				AND t.content = #{content}
		    </if>
			<if test="@OGNL@isNotEmpty(auditRemark)">
				AND t.audit_remark = #{auditRemark}
		    </if>
			<if test="@OGNL@isNotEmpty(dispatchStatus)">
				AND t.dispatch_status = #{dispatchStatus}
		    </if>
			<if test="@OGNL@isNotEmpty(dispatchOffice)">
				AND t.dispatch_office like CONCAT("%", #{dispatchOffice},"%")
		    </if>
			<if test="@OGNL@isNotEmpty(title)">
				AND t.title like CONCAT("%", #{title},"%")
		    </if>
			<if test="@OGNL@isNotEmpty(zsOffice)">
				AND t.zs_office like CONCAT("%", #{zsOffice},"%")
		    </if>
			<if test="@OGNL@isNotEmpty(csOffice)">
				AND t.cs_office like CONCAT("%", #{csOffice},"%")
		    </if>
			<if test="@OGNL@isNotEmpty(dispatchNumber)">
				AND t.dispatch_number = #{dispatchNumber}
		    </if>
			<if test="@OGNL@isNotEmpty(addUserId)">
				AND t.add_user_id = #{addUserId}
		    </if>
			<if test="@OGNL@isNotEmpty(addUserName)">
				AND t.add_user_name = #{addUserName}
		    </if>
			<if test="@OGNL@isNotEmpty(addTime)">
				AND t.add_time = #{addTime}
		    </if>
			<if test="@OGNL@isNotEmpty(lastUpdateUserId)">
				AND t.last_update_user_id = #{lastUpdateUserId}
		    </if>
			<if test="@OGNL@isNotEmpty(lastUpdateUserName)">
				AND t.last_update_user_name = #{lastUpdateUserName}
		    </if>
			<if test="@OGNL@isNotEmpty(lastUpdateTime)">
				AND t.last_update_time = #{lastUpdateTime}
		    </if>
		</where>
	</select>
	
	<insert id="insertBatch" parameterType="java.util.List" >
        INSERT INTO std_oa_dispatch (
            dispatch_type ,
            secret_level ,
            urgency_level ,
            dispatch_template ,
            content ,
            audit_remark ,
            dispatch_status ,
            dispatch_office ,
            title ,
            zs_office ,
            cs_office ,
            dispatch_number ,
            add_user_id ,
            add_user_name ,
            add_time ,
            last_update_user_id ,
            last_update_user_name ,
            last_update_time 
        ) VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
        (
        	#{item.dispatchType},
        	#{item.secretLevel},
        	#{item.urgencyLevel},
        	#{item.dispatchTemplate},
        	#{item.content},
        	#{item.auditRemark},
        	#{item.dispatchStatus},
        	#{item.dispatchOffice},
        	#{item.title},
        	#{item.zsOffice},
        	#{item.csOffice},
        	#{item.dispatchNumber},
        	#{item.addUserId},
        	#{item.addUserName},
        	#{item.addTime},
        	#{item.lastUpdateUserId},
        	#{item.lastUpdateUserName},
        	#{item.lastUpdateTime}
        )
        </foreach>
	</insert>
	
	<select id="count" parameterType="map" resultType="int">
		SELECT count(1)
	    FROM std_oa_dispatch t
		<where>
			<if test="@OGNL@isNotEmpty(id)">
				AND t.id = #{id}
		    </if>
			<if test="@OGNL@isNotEmpty(dispatchType)">
				AND t.dispatch_type = #{dispatchType}
		    </if>
			<if test="@OGNL@isNotEmpty(secretLevel)">
				AND t.secret_level = #{secretLevel}
		    </if>
			<if test="@OGNL@isNotEmpty(urgencyLevel)">
				AND t.urgency_level = #{urgencyLevel}
		    </if>
			<if test="@OGNL@isNotEmpty(dispatchTemplate)">
				AND t.dispatch_template = #{dispatchTemplate}
		    </if>
			<if test="@OGNL@isNotEmpty(content)">
				AND t.content = #{content}
		    </if>
			<if test="@OGNL@isNotEmpty(auditRemark)">
				AND t.audit_remark = #{auditRemark}
		    </if>
			<if test="@OGNL@isNotEmpty(dispatchStatus)">
				AND t.dispatch_status = #{dispatchStatus}
		    </if>
			<if test="@OGNL@isNotEmpty(dispatchOffice)">
				AND t.dispatch_office = #{dispatchOffice}
		    </if>
			<if test="@OGNL@isNotEmpty(title)">
				AND t.title = #{title}
		    </if>
			<if test="@OGNL@isNotEmpty(zsOffice)">
				AND t.zs_office = #{zsOffice}
		    </if>
			<if test="@OGNL@isNotEmpty(csOffice)">
				AND t.cs_office = #{csOffice}
		    </if>
			<if test="@OGNL@isNotEmpty(dispatchNumber)">
				AND t.dispatch_number = #{dispatchNumber}
		    </if>
			<if test="@OGNL@isNotEmpty(addUserId)">
				AND t.add_user_id = #{addUserId}
		    </if>
			<if test="@OGNL@isNotEmpty(addUserName)">
				AND t.add_user_name = #{addUserName}
		    </if>
			<if test="@OGNL@isNotEmpty(addTime)">
				AND t.add_time = #{addTime}
		    </if>
			<if test="@OGNL@isNotEmpty(lastUpdateUserId)">
				AND t.last_update_user_id = #{lastUpdateUserId}
		    </if>
			<if test="@OGNL@isNotEmpty(lastUpdateUserName)">
				AND t.last_update_user_name = #{lastUpdateUserName}
		    </if>
			<if test="@OGNL@isNotEmpty(lastUpdateTime)">
				AND t.last_update_time = #{lastUpdateTime}
		    </if>
		</where>
	</select>
	
	<update id="updateByParams" >
		UPDATE std_oa_dispatch  t 
		<set>
		    <if test="@OGNL@isNotEmpty(model.dispatchType)">
				dispatch_type = #{model.dispatchType},
			</if>
		    <if test="@OGNL@isNotEmpty(model.secretLevel)">
				secret_level = #{model.secretLevel},
			</if>
		    <if test="@OGNL@isNotEmpty(model.urgencyLevel)">
				urgency_level = #{model.urgencyLevel},
			</if>
		    <if test="@OGNL@isNotEmpty(model.dispatchTemplate)">
				dispatch_template = #{model.dispatchTemplate},
			</if>
		    <if test="@OGNL@isNotEmpty(model.content)">
				content = #{model.content},
			</if>
		    <if test="@OGNL@isNotEmpty(model.auditRemark)">
				audit_remark = #{model.auditRemark},
			</if>
		    <if test="@OGNL@isNotEmpty(model.dispatchStatus)">
				dispatch_status = #{model.dispatchStatus},
			</if>
		    <if test="@OGNL@isNotEmpty(model.dispatchOffice)">
				dispatch_office = #{model.dispatchOffice},
			</if>
		    <if test="@OGNL@isNotEmpty(model.title)">
				title = #{model.title},
			</if>
		    <if test="@OGNL@isNotEmpty(model.zsOffice)">
				zs_office = #{model.zsOffice},
			</if>
		    <if test="@OGNL@isNotEmpty(model.csOffice)">
				cs_office = #{model.csOffice},
			</if>
		    <if test="@OGNL@isNotEmpty(model.dispatchNumber)">
				dispatch_number = #{model.dispatchNumber},
			</if>
		    <if test="@OGNL@isNotEmpty(model.addUserId)">
				add_user_id = #{model.addUserId},
			</if>
		    <if test="@OGNL@isNotEmpty(model.addUserName)">
				add_user_name = #{model.addUserName},
			</if>
		    <if test="@OGNL@isNotEmpty(model.addTime)">
				add_time = #{model.addTime},
			</if>
		    <if test="@OGNL@isNotEmpty(model.lastUpdateUserId)">
				last_update_user_id = #{model.lastUpdateUserId},
			</if>
		    <if test="@OGNL@isNotEmpty(model.lastUpdateUserName)">
				last_update_user_name = #{model.lastUpdateUserName},
			</if>
		    <if test="@OGNL@isNotEmpty(model.lastUpdateTime)">
				last_update_time = #{model.lastUpdateTime},
			</if>
	    </set>
		<where>
			<if test="@OGNL@isNotEmpty(params.id)">
				AND t.id = #{params.id}
		    </if>
			<if test="@OGNL@isNotEmpty(params.dispatchType)">
				AND t.dispatch_type = #{params.dispatchType}
		    </if>
			<if test="@OGNL@isNotEmpty(params.secretLevel)">
				AND t.secret_level = #{params.secretLevel}
		    </if>
			<if test="@OGNL@isNotEmpty(params.urgencyLevel)">
				AND t.urgency_level = #{params.urgencyLevel}
		    </if>
			<if test="@OGNL@isNotEmpty(params.dispatchTemplate)">
				AND t.dispatch_template = #{params.dispatchTemplate}
		    </if>
			<if test="@OGNL@isNotEmpty(params.content)">
				AND t.content = #{params.content}
		    </if>
			<if test="@OGNL@isNotEmpty(params.auditRemark)">
				AND t.audit_remark = #{params.auditRemark}
		    </if>
			<if test="@OGNL@isNotEmpty(params.dispatchStatus)">
				AND t.dispatch_status = #{params.dispatchStatus}
		    </if>
			<if test="@OGNL@isNotEmpty(params.dispatchOffice)">
				AND t.dispatch_office = #{params.dispatchOffice}
		    </if>
			<if test="@OGNL@isNotEmpty(params.title)">
				AND t.title = #{params.title}
		    </if>
			<if test="@OGNL@isNotEmpty(params.zsOffice)">
				AND t.zs_office = #{params.zsOffice}
		    </if>
			<if test="@OGNL@isNotEmpty(params.csOffice)">
				AND t.cs_office = #{params.csOffice}
		    </if>
			<if test="@OGNL@isNotEmpty(params.dispatchNumber)">
				AND t.dispatch_number = #{params.dispatchNumber}
		    </if>
			<if test="@OGNL@isNotEmpty(params.addUserId)">
				AND t.add_user_id = #{params.addUserId}
		    </if>
			<if test="@OGNL@isNotEmpty(params.addUserName)">
				AND t.add_user_name = #{params.addUserName}
		    </if>
			<if test="@OGNL@isNotEmpty(params.addTime)">
				AND t.add_time = #{params.addTime}
		    </if>
			<if test="@OGNL@isNotEmpty(params.lastUpdateUserId)">
				AND t.last_update_user_id = #{params.lastUpdateUserId}
		    </if>
			<if test="@OGNL@isNotEmpty(params.lastUpdateUserName)">
				AND t.last_update_user_name = #{params.lastUpdateUserName}
		    </if>
			<if test="@OGNL@isNotEmpty(params.lastUpdateTime)">
				AND t.last_update_time = #{params.lastUpdateTime}
		    </if>
		</where>
	</update>
	
	<update id="updateStatusById" parameterType="map">
		UPDATE std_oa_dispatch  t 
		set dispatch_status = #{dispatchStatus},last_update_user_id = #{userId},
			last_update_user_name = #{userName},last_update_time = SYSDATE 
		where  t.id = #{id} 
	</update>
</mapper>
