<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hsnn.medstgmini.base.std.dao.StdOaRecordDao">
	<resultMap type="com.hsnn.medstgmini.base.std.model.StdOaRecord" id="BaseResultMap">
        <result property="id" column="id" javaType="Integer"/>
        <result property="sourceId" column="source_id" javaType="String"/>
        <result property="source" column="source" javaType="String"/>
        <result property="operationType" column="operation_type" javaType="Boolean"/>
        <result property="addUserId" column="add_user_id" javaType="String"/>
        <result property="addUserName" column="add_user_name" javaType="String"/>
        <result property="addTime" column="add_time" javaType="Date"/>
	</resultMap>
	
	<sql id="full-columns" >
        t.id,
        t.source_id,
        t.source,
        t.operation_type,
        t.add_user_id,
        t.add_user_name,
        t.add_time
	</sql>
		
	<select id="get" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		SELECT <include refid="full-columns" />  
		FROM std_oa_record t
		WHERE t.id =  #{value}
	</select>

	<insert id="save" parameterType="com.hsnn.medstgmini.base.std.model.StdOaRecord">
		INSERT INTO std_oa_record(
	            source_id ,
	            source ,
	            operation_type ,
	            add_user_id ,
	            add_user_name ,
	            add_time 
		)
		VALUES (
	        	#{sourceId},
	        	#{source},
	        	#{operationType},
	        	#{addUserId},
	        	#{addUserName},
	        	SYSDATE
		)
		<selectKey resultType="java.lang.Integer" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
        </selectKey>
	</insert>

	<update id="update" parameterType="com.hsnn.medstgmini.base.std.model.StdOaRecord">
		UPDATE std_oa_record  
		<set>
			source_id = #{sourceId},
			source = #{source},
			operation_type = #{operationType},
			add_user_id = #{addUserId},
			add_user_name = #{addUserName},
			add_time = #{addTime},
        </set>
		WHERE  id =  #{id}
	</update>
	
	<update id="updateBySelective" parameterType="com.hsnn.medstgmini.base.std.model.StdOaRecord">
		UPDATE std_oa_record  
		<set>
	    	<if test="@OGNL@isNotEmpty(sourceId)">
				source_id = #{sourceId},
			</if>
	    	<if test="@OGNL@isNotEmpty(source)">
				source = #{source},
			</if>
	    	<if test="@OGNL@isNotEmpty(operationType)">
				operation_type = #{operationType},
			</if>
	    	<if test="@OGNL@isNotEmpty(addUserId)">
				add_user_id = #{addUserId},
			</if>
	    	<if test="@OGNL@isNotEmpty(addUserName)">
				add_user_name = #{addUserName},
			</if>
	    	<if test="@OGNL@isNotEmpty(addTime)">
				add_time = #{addTime},
			</if>
        </set>
		WHERE  id =  #{id}
	</update>
	
	<delete id="delete" parameterType="java.lang.Integer">
		DELETE FROM std_oa_record WHERE  id =  #{value}
	</delete>

	<select id="queryAll" parameterType="map" resultMap="BaseResultMap">
		SELECT <include refid="full-columns" />
	    FROM std_oa_record t
		<where>
			<if test="@OGNL@isNotEmpty(id)">
				AND t.id = #{id}
		    </if>
			<if test="@OGNL@isNotEmpty(sourceId)">
				AND t.source_id = #{sourceId}
		    </if>
			<if test="@OGNL@isNotEmpty(source)">
				AND t.source = #{source}
		    </if>
			<if test="@OGNL@isNotEmpty(operationType)">
				AND t.operation_type = #{operationType}
		    </if>
			<if test="@OGNL@isNotEmpty(addUserId)">
				AND t.add_user_id = #{addUserId}
		    </if>
			<if test="@OGNL@isNotEmpty(addUserName)">
				AND t.add_user_name = #{addUserName}
		    </if>
			<if test="@OGNL@isNotEmpty(addTime)">
				AND t.add_time = #{addTime}
		    </if>
		</where>
	</select>
	
	<insert id="insertBatch" parameterType="java.util.List" >
        INSERT INTO std_oa_record (
            source_id ,
            source ,
            operation_type ,
            add_user_id ,
            add_user_name ,
            add_time 
        ) VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
        (
        	#{item.sourceId},
        	#{item.source},
        	#{item.operationType},
        	#{item.addUserId},
        	#{item.addUserName},
        	#{item.addTime}
        )
        </foreach>
	</insert>
	
	<select id="count" parameterType="map" resultType="int">
		SELECT count(1)
	    FROM std_oa_record t
		<where>
			<if test="@OGNL@isNotEmpty(id)">
				AND t.id = #{id}
		    </if>
			<if test="@OGNL@isNotEmpty(sourceId)">
				AND t.source_id = #{sourceId}
		    </if>
			<if test="@OGNL@isNotEmpty(source)">
				AND t.source = #{source}
		    </if>
			<if test="@OGNL@isNotEmpty(operationType)">
				AND t.operation_type = #{operationType}
		    </if>
			<if test="@OGNL@isNotEmpty(addUserId)">
				AND t.add_user_id = #{addUserId}
		    </if>
			<if test="@OGNL@isNotEmpty(addUserName)">
				AND t.add_user_name = #{addUserName}
		    </if>
			<if test="@OGNL@isNotEmpty(addTime)">
				AND t.add_time = #{addTime}
		    </if>
		</where>
	</select>
	
	<update id="updateByParams" >
		UPDATE std_oa_record  t 
		<set>
		    <if test="@OGNL@isNotEmpty(model.sourceId)">
				source_id = #{model.sourceId},
			</if>
		    <if test="@OGNL@isNotEmpty(model.source)">
				source = #{model.source},
			</if>
		    <if test="@OGNL@isNotEmpty(model.operationType)">
				operation_type = #{model.operationType},
			</if>
		    <if test="@OGNL@isNotEmpty(model.addUserId)">
				add_user_id = #{model.addUserId},
			</if>
		    <if test="@OGNL@isNotEmpty(model.addUserName)">
				add_user_name = #{model.addUserName},
			</if>
		    <if test="@OGNL@isNotEmpty(model.addTime)">
				add_time = #{model.addTime},
			</if>
	    </set>
		<where>
			<if test="@OGNL@isNotEmpty(params.id)">
				AND t.id = #{params.id}
		    </if>
			<if test="@OGNL@isNotEmpty(params.sourceId)">
				AND t.source_id = #{params.sourceId}
		    </if>
			<if test="@OGNL@isNotEmpty(params.source)">
				AND t.source = #{params.source}
		    </if>
			<if test="@OGNL@isNotEmpty(params.operationType)">
				AND t.operation_type = #{params.operationType}
		    </if>
			<if test="@OGNL@isNotEmpty(params.addUserId)">
				AND t.add_user_id = #{params.addUserId}
		    </if>
			<if test="@OGNL@isNotEmpty(params.addUserName)">
				AND t.add_user_name = #{params.addUserName}
		    </if>
			<if test="@OGNL@isNotEmpty(params.addTime)">
				AND t.add_time = #{params.addTime}
		    </if>
		</where>
	</update>
</mapper>
